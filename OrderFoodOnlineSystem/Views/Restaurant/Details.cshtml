@model OrderFoodOnlineSystem.ViewModels.RestaurantViewModels.RestaurantViewModel

@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    List<FavouriteRestaurant>? favoriteRestaurants = ViewBag.favoriteRestaurants;
    List<Review> reviews = ViewBag.Reviews;
}


<div class="main-sec"></div>

<partial name ="_RestaurentSliderSmallPartial"></partial>

<!-- restaurent top -->
<!-- restaurent details -->
<section class="restaurent-details  u-line">
    <div class="container">
        <div class="row">
            
            <div class="col-md-9">
                <div class="heading  padding-tb-10 d-flex align-items-center">
                    <img src="~/@Model.ImageUrl" alt="Great Burger" class="rounded-circle" style="width: 100px; height: 100px; object-fit: cover; margin-right: 15px;">
                    <div>
                        <div class="d-flex align-items-center">
                            <h3 class="text-light-black title fw-700 no-margin me-2">@Model.Name</h3>
                            <span class="text-custom-white rectangle-tag bg-yellow">
                                @Model.AverageRating
                            </span>
                        </div>


                        <div class="head-rating">
                            <div class="rating">
                                <span>
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= Math.Floor(Model.AverageRating)) // Full star
                                        {
                                            <i class="fas fa-star text-yellow"></i>
                                        }
                                        else if (i == Math.Ceiling(Model.AverageRating) && Model.AverageRating % 1 != 0) // Half star
                                        {
                                            <i class="fas fa-star-half-alt text-yellow"></i>
                                        }
                                        else // Empty star
                                        {
                                            <i class="far fa-star text-light-green"></i>
                                        }
                                    }
                                </span>
                                <span class="text-light-black fs-12 rate-data">@Model.NumOfReviews rating</span>

                                <a class="nav-link text-light-white fw-700" href="#review">Reviews</a>

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-3 padding-tb-10 ps-5">
                <a class="btn btn-outline-danger fw-700 rounded-pill" asp-controller="Review" asp-action="Create" asp-route-restaurantId="@Model.Id"
                   style="transition: box-shadow 0.3s ease, letter-spacing 0.2s ease, background-color 0.3s ease, color 0.3s ease;" onmouseover="this.style.boxShadow='0px 4px 15px rgba(0, 0, 0, 0.1)'; this.style.letterSpacing='1px'; this.style.backgroundColor='transparent'; this.style.color='red';" onmouseout="this.style.boxShadow='none'; this.style.letterSpacing='0'; this.style.backgroundColor='transparent'; this.style.color='red';">
                    Add Review
                </a>
            </div>

        </div>
    </div>
</section>

<div class="restaurent-address u-line">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="address-details">
                    <div class="address">
                        <div class="delivery-address">
                            @{
                                var now = TimeOnly.FromDateTime(DateTime.Now); // Get the current time
                                bool isOpen;

                                if (Model.DateOpen < Model.DateColse)
                                {
                                    // Normal case: Same-day opening and closing (e.g., 10 AM - 10 PM)
                                    isOpen = now >= Model.DateOpen && now <= Model.DateColse;
                                }
                                else
                                {
                                    // Case where the restaurant closes past midnight (e.g., 10 AM - 2 AM)
                                    isOpen = now >= Model.DateOpen || now < Model.DateColse;
                                }
                            }

                            <a href="order-details.html" class="text-light-black">@Model.DateOpen - @Model.DateColse</a>
                            <div class="delivery-type">
                                @if (isOpen)
                                {
                                    <span class="text-success fs-12 fw-500">Open Now</span>
                                }
                                else
                                {
                                    <span class="text-danger fs-12 fw-500">Closed</span>
                                }
                                <span class="text-light-white">, Delivery: @Model.DeliveryFees EGP</span>
                            </div>
                        </div>


                        @{
                            int cusId = 0;
                            int.TryParse(User.FindFirst("UserId")?.Value, out cusId);
                            var classFav = favoriteRestaurants != null && favoriteRestaurants.Any(f => f.RestaurantId == Model.Id) ? "favorite" : "not-favorite";
                            var classFavFlag = classFav == "favorite" ? "true" : "false";
                        }

                        <button class="@classFav toggle-favorite" data-favorite="@classFavFlag"
                                data-id="123" aria-label="Remove from favorites"
                                data-restaurant-id="@Model.Id" data-customer-id="@cusId"></button>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- restaurent details -->
<!-- restaurent tab -->
<!-- restaurent tab -->
<!-- restaurent meals -->
<section class=" restaurent-meals">

    <div class="restaurent-tabs u-line">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="restaurent-menu scrollnav">
                        <ul class="nav nav-pills">


                            <li class="nav-item">
                                <a class="nav-link active text-light-white fw-700" data-toggle="pill" href="#menu">All Menu</a>
                            </li>

                            @foreach (var item in Model.CategoryMenuItems)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-light-white fw-700" data-toggle="pill" href="#@item.Name">@item.Name</a>
                                </li>
                            }

                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>


    @foreach (var item in Model.CategoryMenuItems)
    {
        <div class="container " id="@item.Name">
            <div class="row justify-content-center">

                <div class="col-lg-10 restaurent-meal-head mb-md-40">
                    <!-- Added col-lg-10 to add side spacing -->
                    @* edit *@
                    <div class="card">
                        <div class="card-header">
                            <div class="section-header-left">
                                <h3 class="text-light-green header-title">
                                    <a class="card-link text-light-black padding-tb-10" data-toggle="collapse" href="@($"#{item.Name}collapseOne")">
                                        @item.Name
                                    </a>
                                </h3>
                            </div>
                        </div>


                        <div id="@(item.Name + "collapseOne")" class="collapse show">
                            <div class="card-body no-padding">
                                @foreach (var menuItem in item.MenuItems)
                                {
                                    <div class="row">
                                        <div class="col-lg-12">
                                            <div class="restaurent-product-list">
                                                <div class="restaurent-product-detail">
                                                    <div class="restaurent-product-left">
                                                        <div class="restaurent-product-title-box">
                                                            <div class="restaurent-product-box">
                                                                <div class="restaurent-product-title">
                                                                    <span data-menu-id="@menuItem.Id" style="display: none;"></span>
                                                                    <h6 class="mb-2">
                                                                        @if (menuItem.IsAvailable)
                                                                        {
                                                                             
                                                                            if (isOpen)
                                                                            {
                                                                                <a href="javascript:void(0)" class="text-light-black fw-600"
                                                                                   data-toggle="modal"
                                                                                   data-target="#restaurent-popup">
                                                                                    @menuItem.Name
                                                                                </a>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span class="text-light-black fw-600" style="cursor: not-allowed;">
                                                                                    @menuItem.Name
                                                                                </span>
                                                                            }
                                                                            
                                                                            

                                                                            @*
                                                                            <a href="javascript:void(0)" class="text-light-black fw-600"
                                                                               data-toggle="modal"
                                                                               data-target="#restaurent-popup">
                                                                                @menuItem.Name
                                                                            </a>
                                                                            *@


                                                                        }
                                                                        else
                                                                        {
                                                                            <span class="text-muted fw-600" style="cursor: not-allowed; opacity: 0.6;">
                                                                                @menuItem.Name (Not Available)
                                                                            </span>
                                                                        }
                                                                    </h6>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="restaurent-product-caption-box mt-2">
                                                            <span class="text-light-white">@menuItem.Description</span>
                                                        </div>
                                                        <div class="restaurent-tags-price">
                                                            <div class="restaurent-tags"></div>
                                                            <div class="restaurent-product-price">
                                                                <h6 class="@(menuItem.IsAvailable ? "text-success" : "text-muted")">@menuItem.Price EGP</h6>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="restaurent-product-img"> 
                                                        <img src="~/@menuItem.ImageUrl" alt="#" 
                                                             style="@(menuItem.IsAvailable ? "" : "filter: grayscale(100%); opacity: 0.5;")">
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>



                    </div>
                </div>

            </div>
        </div>
    }

</section>

<!-- restaurent reviews -->

<section class="section-padding restaurent-review smoothscroll" id="review">
    <div class="container">
        <div class="row">
            <div class="col-12">
                @*                 edit
 *@                <div class="d-flex justify-content-between align-items-center">
                    <h3 class="text-light-black header-title title">Reviews For <span class="text-danger pl-2">@Model.Name</span> </h3>


                </div>
                <div class="restaurent-rating mb-xl-20">
                    <div class="star">
                        <span>
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= Math.Floor(Model.AverageRating)) // Full star
                                {
                                    <i class="fas fa-star text-yellow"></i>
                                }
                                else if (i == Math.Ceiling(Model.AverageRating) && Model.AverageRating % 1 != 0) // Half star
                                {
                                    <i class="fas fa-star-half-alt text-yellow"></i>
                                }
                                else // Empty star
                                {
                                    <i class="far fa-star text-light-green"></i>
                                }
                            }
                        </span>
                    </div>
                    <span class="fs-12 text-light-black">@Model.NumOfReviews Ratings</span>
                </div>
                <div class="u-line"></div>
            </div>
            <div class="col-md-12">

                @foreach (var review in reviews)
                {
                    <div class="review-box">
                        <div class="review-user">
                            <div class="review-user-img">
                                <img src="~/assets/img/icons/account-3.png" class="rounded-circle" alt="#">
                                <div class="reviewer-name">
                                    <p class="text-light-black fw-600">
                                        @review.Customer?.FirstName
                                </div>
                            </div>
                            <div class="review-date">
                                <span class="text-light-white">@review.Date</span>
                            </div>
                        </div>
                        <div class="ratings">

                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= review.Rating) // Full star
                                {
                                    <i class="fas fa-star text-yellow"></i>
                                }
                                else if (i == review.Rating && Model.AverageRating % 1 != 0) // Half star
                                {
                                    <i class="fas fa-star-half-alt text-yellow"></i>
                                }
                                else // Empty star
                                {
                                    <i class="far fa-star text-light-green"></i>
                                }
                            }

                        </div>
                        <p class="text-light-black">@review.Comment</p>


                    </div>
                }



            </div>

        </div>
    </div>
</section>
<!-- restaurent reviews -->
<!-- product popup -->
@* edits
 *@
<div class="modal fade restaurent-popup" id="restaurent-popup" style="max-height: 460px; overflow-y: hidden;">
    <div class="modal-dialog modal-md">
        <div class="modal-content" style="max-height: 400px; overflow: auto; display: flex; flex-direction: column;">
            <div style="position: relative;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="position: absolute; z-index: 9999; background: transparent; border: none; font-size: 2rem;">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body" style="padding-bottom: 0; flex-grow: 1; overflow-y: auto;">
                <div class="name px-3 py-2 text-center" style="margin-bottom: 20px;">
                    <h3 id="popup-title" class="text-light-black fw-700 mb-2"></h3>
                    <h5 id="popup-price" class="text-light-black fw-600 mb-3"></h5>
                </div>

                <div class="u-line px-3 py-2" style="margin-bottom: 20px;">
                    <div class="product-quantity pb-3">
                        <span class="text-light-black fw-700 fs-16">Quantity</span>
                        <div class="input-group quantity">
                            <div class="input-group-append">
                                <button class="minus-btn" type="button" name="button">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                            <input type="text" class="text-center" name="name" value="1">
                            <div class="input-group-prepend">
                                <button class="plus-btn" type="button" name="button">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="additional-product px-3 py-3" style="margin-bottom: 20px; flex-grow: 1;">
                    <h4 class="text-light-green fw-700">Description</h4>
                    <p id="popup-description" class="text-light-black" style="margin-bottom: 0; height: 100%;"></p>
                </div>

                <div class="modal-footer pt-4" style="padding-bottom: 0; text-align: center;">
                    <button id="popup-add-btn" class="btn-second btn-submit ">Add to Cart</button>
                </div>
            </div>
        </div>
    </div>
</div>


<partial name="_ToggleScriptsPartial"></partial>


<script>

    $(document).ready(function () {
        function loadRestaurantData(element) {
            const product = element.closest('.restaurent-product-detail');

            if (!product) {
                console.error("Product container not found.");
                return;
            }

            const nameElem = product.querySelector('.restaurent-product-title a');
            const descriptionElem = product.querySelector('.restaurent-product-caption-box span');
            const priceElem = product.querySelector('.restaurent-product-price h6');
    @* const imageElem = product.querySelector('.restaurent-product-img img'); *@
            const menuIdElem = product.querySelector("span[data-menu-id]");

            if (!nameElem || !descriptionElem || !priceElem || !menuIdElem) {
                console.error("One or more elements inside .restaurent-product-detail are missing.");
                return;
            }

            const price = parseFloat(priceElem.innerText.replace(/[^\d.]/g, ''));

            // **Reset quantity to 1 each time modal opens**
            $(".quantity input").val(1);

    @* document.getElementById('popup-image').src = imageElem.src; *@
            document.getElementById('popup-title').innerText = nameElem.innerText;
            document.getElementById('popup-price').innerText = priceElem.innerText;
            document.getElementById('popup-description').innerText = descriptionElem.innerText;

            $("#popup-add-btn").data("base-price", price);
            $("#popup-add-btn").data("menu-id", menuIdElem.getAttribute("data-menu-id")); // Store menu item ID

            updatePrice();
        }

        function updatePrice() {
            let basePrice = $("#popup-add-btn").data("base-price") || 0;
            let quantity = parseInt($(".quantity input").val());
            let totalPrice = (basePrice * quantity).toFixed(2);
            $("#popup-add-btn").text(`Add to Cart : ${totalPrice} EGP`);
        }

        // **Prevent duplicate event listeners**
        $(document).off("click", "[data-toggle='modal']").on("click", "[data-toggle='modal']", function () {
            loadRestaurantData(this);
        });

        $(document).off("click", ".plus-btn").on("click", ".plus-btn", function () {
            let input = $(".quantity input");
            let value = parseInt(input.val()) || 1;
    @* input.val(value + 1); *@
            updatePrice();
        });

        $(document).off("click", ".minus-btn").on("click", ".minus-btn", function () {
            let input = $(".quantity input");
            let value = parseInt(input.val()) || 1;
            if (value > 0) {
    @* input.val(value - 1); *@
                updatePrice();
            }
        });

        $(document).off("input", ".quantity input").on("input", ".quantity input", function () {
            updatePrice();
        });



    @* TOASTER CONFIGURATION SETTINGS *@
    toastr.options = {
    timeOut: 2000, // Notification will hide after 2 seconds
    extendedTimeOut: 500, // Hovering extends the timeout by 0.5 second
    };

    // AJAX Call on Add to Bag
    $(document).off("click", "#popup-add-btn").on("click", "#popup-add-btn", function () {
    let menuItemId = $(this).data("menu-id");
    let quantity = parseInt($(".quantity input").val());

    if (!menuItemId || quantity < 1) {
        console.error("Invalid menu item or quantity.");
        return;
    }

    $.ajax({
        url: "/OrderItem/Create",
        type: "POST",
        contentType: "application/json",
        data: JSON.stringify({
            MenuItemId: parseInt(menuItemId),
            Quantity: quantity
        }),
        success: function (response) {
            // Show success message using toastr
    @* toastr.success("Item added to cart successfully!"); *@

            $("#restaurent-popup").modal("hide");

            setTimeout(function () {
                window.location.reload();
            }, 200);
        },
        error: function (xhr) {
            if (xhr.status === 401) {
                // Show a toastr message with a login link
                toastr.error(
                    'Please <a href="/Account/Login" style="color: white; text-decoration: underline;">login</a> first to add items to your cart.',
                    null,
                    {
                        closeButton: true,
                        timeOut: 5000,
                        extendedTimeOut: 2000,
                        tapToDismiss: false,
                        onclick: function () {
                            window.location.href = "/Account/Login";
                        }
                    }
                );
            } else {
                // Handle other errors
                toastr.error(xhr.responseText || "An error occurred. Please try again.");
            }
        }


    });


        });
    });


</script>


